{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/gcp-data.service.ts","webpack:///src/app/gemini.service.ts","webpack:///src/app/new-dashboard/new-dashboard.component.ts","webpack:///src/app/new-dashboard/new-dashboard.component.html","webpack:///src/app/new-player/new-player.component.ts","webpack:///src/app/new-player/new-player.component.html","webpack:///src/app/player/player.component.ts","webpack:///src/app/player/player.component.html","webpack:///src/app/time-format.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","router","gcpDataService","videoArr","keyword","isDataNotFound","navigate","sessionStorage","setItem","getGcpData","subscribe","data","length","keyupFunc","onSearch","GcpDataService","http","apiUrlGcpData","apiUrlVideoData","params","set","get","getItem","providedIn","GeminiService","messageHistory","generationConfig","temperature","top_p","top_k","safetySettings","category","threshold","generativeAI","prompt","model","getGenerativeModel","next","from","message","generateContent","result","response","text","console","log","asObservable","NewDashboardComponent","NewPlayerComponent","route","gcp","geminiServ","currentMsg","Category","videoName","videoFrame","currentTimeIndex","isFullTranscript","selectedTranscripts","chatHistory","getMessageHistory","res","video","dataFull","map","m","push","paramMap","videoId","loadVideo","videoElm","myVideo","nativeElement","getVideoData","v_id","FullTransquery","video_link","MatchTrascQuery","status","videoname","startVideoAtTimeIfNeeded","err","isNaN","start","src","currentTime","play","alert","startime","time","nextSegment","Start","number","i","end","convertSecondsToMMSS","speaker","transcript","seconds","minutes","Math","floor","remainingSeconds","ceil","padToTwoDigits","num","toString","padStart","startTime","endTime","arrayString","join","validPrompt","msg","generateText","event","index","target","checked","indexOf","splice","onTimeUpdate","transcriptChange","sendData","PlayerComponent","TimeFormatPipe","value","undefined","name","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PlayerComponent } from './player/player.component';\nimport { NewPlayerComponent } from './new-player/new-player.component';\nimport { NewDashboardComponent } from './new-dashboard/new-dashboard.component';\n\n\nconst routes: Routes = [\n  {path:'',component:NewDashboardComponent},\n  // {path:'videoplayer/:id',component:PlayerComponent},\n  {path:'videoplayer/:id',component:NewPlayerComponent},\n  // {path:'new',component:NewDashboardComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'VideoTrans';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PlayerComponent } from './player/player.component';\nimport {HttpClientModule} from '@angular/common/http'\nimport { GcpDataService } from './gcp-data.service';\nimport { FormsModule } from '@angular/forms';\nimport { TimeFormatPipe } from './time-format.pipe';\nimport { NewPlayerComponent } from './new-player/new-player.component';\nimport { NewDashboardComponent } from './new-dashboard/new-dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    PlayerComponent,\n    TimeFormatPipe,\n    NewPlayerComponent,\n    NewDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [GcpDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router,private gcpDataService: GcpDataService) { }\n  videoArr: any[] = [];\n  keyword:string = '';\n  isDataNotFound:boolean = false;\n  ngOnInit(): void {\n   \n  }\n\n  visitPlayer(id:string) {\n    this.router.navigate([`/videoplayer/${id}`]);\n  }\n\n  keyupFunc() {\n    this.isDataNotFound = false;\n  }\n\n  onSearch() {\n    if(this.keyword != '') {\n      sessionStorage.setItem('keyword',this.keyword);\n      this.gcpDataService.getGcpData(this.keyword).subscribe(data => {\n        this.videoArr = data;\n        if(this.videoArr.length == 0) {\n          this.isDataNotFound = true;\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"body\">\n    <h1>Video Transcription</h1>\n    <div class=\"search-container\">\n        <input type=\"text\" placeholder=\"Enter Keyword\" [(ngModel)]=\"keyword\" (keyup)=\"keyupFunc()\">\n        <button (click)=\"onSearch()\" [disabled]=\"keyword == ''\">Search</button>\n    </div>\n    <div class=\"videos-container\" *ngIf=\"videoArr.length > 0\">\n        <div class=\"video\" *ngFor=\"let video of videoArr\">\n            <video [src]=\"video?.video_link\" (click)=\"visitPlayer(video?.v_id)\"></video>\n            <div>{{video.videoname}}</div>\n        </div>\n    </div>\n    <div *ngIf=\"videoArr.length == 0 && isDataNotFound\">\n        <h1>Data Not Found</h1>\n    </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GcpDataService {\n  keyword :string = '';\n  // private apiUrlGcpData = 'http://localhost:3000/api/gcp-data';\n  // private apiUrlVideoData = 'http://localhost:3000/api/video-data';\n\n  private apiUrlGcpData = 'http://35.244.4.78:3000/api/gcp-data';\n  private apiUrlVideoData = 'http://35.244.4.78:3000/api/video-data';\n\n\n  constructor(private http: HttpClient) { }\n\n  getGcpData(keyword: string): Observable<any> {\n    const params = new HttpParams().set('keyword', keyword);\n    return this.http.get<any>(this.apiUrlGcpData, { params });\n  }\n\n  getVideoData(id: string): Observable<any> {\n    this.keyword = sessionStorage.getItem('keyword');\n    const params = new HttpParams().set('id', id).set('keyword', this.keyword);\n    return this.http.get<any>(this.apiUrlVideoData, { params });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiService {\n  private generativeAI: GoogleGenerativeAI;\n  private messageHistory: BehaviorSubject<any> = new BehaviorSubject(null);\n  generationConfig = {\n    temperature: 1,\n    top_p: 1,\n    top_k: 32,\n    // max_output_tokens: 1024,\n};\n\nsafetySettings = [\n    { category: 'HARM_CATEGORY_HARASSMENT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n    { category: 'HARM_CATEGORY_HATE_SPEECH', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n    { category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n    { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' }\n];\n  constructor() { \n    this.generativeAI = new GoogleGenerativeAI('AIzaSyBK9jez2EI6_ABsXNopDzs6OYqEGXNVGdY');\n  }\n\n  async generateText(prompt:string) {\n    const model = this.generativeAI.getGenerativeModel({model:'gemini-pro',generationConfig: this.generationConfig});\n\n    this.messageHistory.next({\n      from: 'user',\n      message: prompt\n    })\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text();\n    console.log('text',text);\n    this.messageHistory.next({\n      from: 'bot',\n      message: text\n    })\n  }\n\n  public getMessageHistory(): Observable<any> {\n    return this.messageHistory.asObservable();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\n\n@Component({\n  selector: 'app-new-dashboard',\n  templateUrl: './new-dashboard.component.html',\n  styleUrls: ['./new-dashboard.component.scss']\n})\nexport class NewDashboardComponent implements OnInit {\n\n  constructor(private router: Router,private gcpDataService: GcpDataService) { }\n  videoArr: any[] = [];\n  keyword:string = '';\n  isDataNotFound:boolean = false;\n  ngOnInit(): void {\n    if(sessionStorage.getItem('keyword') !== null) {\n      this.keyword = sessionStorage.getItem('keyword');\n      this.onSearch();\n    }\n  }\n\n  visitPlayer(id:string) {\n    this.router.navigate([`/videoplayer/${id}`]);\n  }\n\n  keyupFunc() {\n    this.isDataNotFound = false;\n  }\n\n  onSearch() {\n    if(this.keyword != '') {\n      sessionStorage.setItem('keyword',this.keyword);\n      this.gcpDataService.getGcpData(this.keyword).subscribe(data => {\n        this.videoArr = data;\n        if(this.videoArr.length == 0) {\n          this.isDataNotFound = true;\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"body\">\n  <div class=\"main-container\">\n    <header>\n      <h1>Scrapio.AI</h1>\n    </header>\n    <div class=\"container\" *ngIf=\"videoArr.length > 0\">\n      <main>\n        <div class=\"video-grid\">\n          <div class=\"video-card\" *ngFor=\"let video of videoArr\">\n            <div class=\"video-thumbnail\">\n              <video [src]=\"video?.video_link\" (click)=\"visitPlayer(video?.v_id)\"></video>\n              <p>{{video.videoname}}</p>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n    <div *ngIf=\"videoArr.length == 0 && isDataNotFound\" class=\"notFound\">\n      <h1>Data Not Found</h1>\n    </div>\n    <footer>\n      <div class=\"search-bar\">\n        <input type=\"text\" placeholder=\"Search for videos...\" [(ngModel)]=\"keyword\" (keyup)=\"keyupFunc()\">\n        <button (click)=\"onSearch()\" [disabled]=\"keyword == ''\">Search</button>\n      </div>\n    </footer>\n  </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\nimport { GeminiService } from '../gemini.service';\n\n@Component({\n  selector: 'app-new-player',\n  templateUrl: './new-player.component.html',\n  styleUrls: ['./new-player.component.scss']\n})\nexport class NewPlayerComponent implements OnInit {\n  currentMsg: string = '';\n  Category: string = '';\n  videoName: string = '';\n  videoFrame: string = '';\n\n  videoId: string;\n  video: any;\n  @ViewChild('myVideo') myVideo: ElementRef<HTMLVideoElement>;\n  startTime: number;\n  videoElm: HTMLVideoElement;\n  currentTimeIndex: number = 0;\n  isFullTranscript: boolean = false;\n  //prompt:string = 'Hi Gemini How Are you?';\n  selectedTranscripts:any[] = [];\n  prompt:string = 'Can you write me content for this transcription or suggest any content ideas';\n  chatHistory:any[] = [];\n  constructor(private route: ActivatedRoute, private gcp: GcpDataService,private geminiServ:GeminiService) {\n    this.geminiServ.getMessageHistory().subscribe((res:any)=> {\n      if(res) {\n        this.prompt = '';\n        this.selectedTranscripts = [];\n        this.video.dataFull?.map(m =>{\n           m['status'] = false})\n        this.chatHistory.push(res);\n        console.log(\"this.video\",this.video)\n      }\n\n      \n    })\n   }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.videoId = params.get('id');\n      this.loadVideo(this.videoId);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.videoElm = this.myVideo.nativeElement;\n    // this.startVideoAtTimeIfNeeded();\n  }\n\n  loadVideo(id: string): void {\n    this.gcp.getVideoData(id).subscribe((res: any) => {\n      // this.video = {\n      //   v_id: res[0].v_id,\n      //   video_link: res[0].video_link,\n      //   data: res\n      // }\n      this.video = {\n        v_id: res.FullTransquery[0].v_id,\n        video_link: res.FullTransquery[0].video_link,\n        data: res.MatchTrascQuery,\n        dataFull : res.FullTransquery?.map(m =>{\n          return { ...m, status : false}}),\n      }\n      console.log('video',this.video)\n      //this.video = this.videoArr.find(v => v.id === +this.videoId);\n      this.Category = this.video.dataFull[0].category;\n      this.videoName= this.video.dataFull[0].videoname;\n      this.startVideoAtTimeIfNeeded();\n    }, (err: any) => {\n      console.log(err);\n    })\n  }\n\n  startVideoAtTimeIfNeeded(): void {\n    if (this.video && this.videoElm) {\n      if(this.video.data.length > 0) {\n        if (!isNaN(this.video.data[this.currentTimeIndex].start) && this.video.data[this.currentTimeIndex].start >= 0) {\n          this.videoElm.src = this.video.video_link; // Set the video source\n          this.videoElm.currentTime = this.video.data[this.currentTimeIndex].start;\n          this.videoElm.play();\n        } else {\n          alert(\"Please enter a valid start time.\");\n        }\n      } else {\n        this.isFullTranscript = true;\n        if (!isNaN(this.video.dataFull[this.currentTimeIndex].start) && this.video.dataFull[this.currentTimeIndex].start >= 0) {\n          this.videoElm.src = this.video.video_link; // Set the video source\n          this.videoElm.currentTime = this.video.dataFull[this.currentTimeIndex].start;\n          this.videoElm.play();\n        } else {\n          alert(\"Please enter a valid start time.\");\n        }\n      }\n    }\n  }\n\n  timeForwardBackward(startime) {\n    this.videoElm.currentTime = startime\n    this.videoElm.play();\n  }\n\n  onNextClick(): void {\n    this.currentTimeIndex++;\n    if (this.currentTimeIndex < this.video.time.length) {\n      const nextSegment = this.video.time[this.currentTimeIndex];\n      this.videoElm.currentTime = nextSegment.Start;\n      this.videoElm.play();\n    } else {\n      alert(\"Please enter a valid start time.\");\n    }\n  }\n\n  onTimeUpdate(): void {\n    this.currentMsg = '';\n    this.videoFrame = ''\n    let number = this.videoElm.currentTime;\n    for (let i = 0; i < this.video.data.length; i++) {\n      if (number >= this.video.data[i].start && number <= this.video.data[i].end) {\n        this.videoFrame = this.convertSecondsToMMSS(this.video.data[i].start) + \" - \" + this.convertSecondsToMMSS(this.video.data[i].end) + \" Minutes\"\n        this.currentMsg = this.video.data[i].speaker + \" : \" + this.video.data[i].transcript;\n      }\n    }\n  }\n\n  convertSecondsToMMSS(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${this.padToTwoDigits(minutes)}:${this.padToTwoDigits(remainingSeconds)}`;\n  }\n\n  private padToTwoDigits(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n\n  isCurrentTimeInRange(startTime: number, endTime: number): boolean {\n    if (!this.videoElm) return false; // Ensure video element is available\n  \n    const currentTime = this.videoElm.currentTime;\n    return currentTime >= startTime && currentTime <= endTime;\n  }\n\n  transcriptChange() {\n    this.isFullTranscript = !this.isFullTranscript;\n  }\n\n  sendData() {\n    console.log(this.selectedTranscripts)\n    let arrayString = this.selectedTranscripts.join(', ');\n    let validPrompt = arrayString + this.prompt;\n    console.log(validPrompt);\n    if(validPrompt) {\n      let msg = this.geminiServ.generateText(this.prompt);\n    }\n  }\n\n  onCheckboxChange(event: any, transcript: string,index:number): void {\n    if (event.target.checked) {\n      this.selectedTranscripts.push(transcript);\n      this.video.dataFull[index].status = true;\n      console.log(this.video.dataFull)\n    } else {\n      const index = this.selectedTranscripts.indexOf(transcript);\n      if (index > -1) {\n        this.selectedTranscripts.splice(index, 1);\n      }\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"subContainer\">\n        <div class=\"videoPlayer\">\n            <header>\n                <button routerLink=\"\">Home</button>\n                <div class=\"titleHeader\">\n                    <p><span>Video Title :</span> {{videoName}}</p>\n                    <p><span>Category :</span> {{Category}}</p>\n                </div>\n            </header>\n           <main>\n            <video #myVideo controls (timeupdate)=\"onTimeUpdate()\">\n                <source [src]=\"video?.link\" type=\"video/mp4\">\n            </video>\n           </main>\n        </div>\n        <div class=\"transcriptContainer\">\n            <div class=\"transcript-tabs\">\n                <button class=\"tab\" [ngClass]=\"{'active': isFullTranscript}\" (click)=\"transcriptChange()\">Full\n                    Transcription</button>\n                <button class=\"tab\" [ngClass]=\"{'active': !isFullTranscript}\" (click)=\"transcriptChange()\">Matched\n                    Transcription</button>\n            </div>\n            <div class=\"transcript-content\" *ngIf=\"isFullTranscript\">\n                <div class=\"transcript-item\" *ngFor=\"let item of video?.dataFull;let i = index\"\n                    [ngClass]=\"{ 'highlight': isCurrentTimeInRange(item.start, item.end) }\">\n                    <input type=\"checkbox\" (change)=\"onCheckboxChange($event, item.transcript,i)\" [checked]=\"item.status\">\n                    <span (click)=\"timeForwardBackward(item.start)\">{{item.start | timeFormat }} - {{item.end | timeFormat }}. {{item.transcript}}</span>\n                </div>\n            </div>\n            <div class=\"transcript-content\" *ngIf=\"!isFullTranscript\">\n                <div class=\"transcript-item\" *ngFor=\"let item of video?.data;let i = index\"\n                    [ngClass]=\"{ 'highlight': isCurrentTimeInRange(item.start, item.end) }\">\n                    <span (click)=\"timeForwardBackward(item.start)\"><b>{{item.start | timeFormat }} - {{item.end | timeFormat }}.</b> {{item.transcript}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"geminiContainer\">\n        <div class=\"chat-container\">\n            <div class=\"message user-message\" *ngFor=\"let item of chatHistory\">\n                <div class=\"avatar\" [ngClass]=\"{'team-avatar': item.from === 'bot', 'user-avatar': item.from !== 'bot'}\"></div>\n                <pre class=\"text\">{{item.message}}</pre>\n            </div>\n        </div>\n        <div class=\"chat-input\">\n            <input type=\"text\" placeholder=\"Write Something...\" [(ngModel)]=\"prompt\" />\n            <div class=\"chat-icons\">\n                <button class=\"icon-button\" (click)=\"sendData()\" [disabled]=\"prompt == ''\">➤</button>\n            </div>\n        </div>\n    \n    </div>\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit {\n  currentMsg: string = '';\n  Category: string = '';\n  videoFrame: string = '';\n\n  videoId: string;\n  video: any;\n  @ViewChild('myVideo') myVideo: ElementRef<HTMLVideoElement>;\n  startTime: number;\n  videoElm: HTMLVideoElement;\n  currentTimeIndex: number = 0;\n  constructor(private route: ActivatedRoute, private gcp: GcpDataService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.videoId = params.get('id');\n      this.loadVideo(this.videoId);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.videoElm = this.myVideo.nativeElement;\n    // this.startVideoAtTimeIfNeeded();\n  }\n\n  loadVideo(id: string): void {\n    this.gcp.getVideoData(id).subscribe((res: any) => {\n      this.video = {\n        v_id: res[0].v_id,\n        video_link: res[0].video_link,\n        data: res\n      }\n      console.log(this.video)\n      //this.video = this.videoArr.find(v => v.id === +this.videoId);\n      this.Category = this.video.data[0].category;\n      this.startVideoAtTimeIfNeeded();\n    }, (err: any) => {\n      console.log(err);\n    })\n  }\n\n  startVideoAtTimeIfNeeded(): void {\n    if (this.video && this.videoElm) {\n      if (!isNaN(this.video.data[this.currentTimeIndex].start) && this.video.data[this.currentTimeIndex].start >= 0) {\n        this.videoElm.src = this.video.video_link; // Set the video source\n        this.videoElm.currentTime = this.video.data[this.currentTimeIndex].start;\n        this.videoElm.play();\n      } else {\n        alert(\"Please enter a valid start time.\");\n      }\n    }\n  }\n\n  timeForwardBackward(startime) {\n    this.videoElm.currentTime = startime\n    this.videoElm.play();\n  }\n\n  onNextClick(): void {\n    this.currentTimeIndex++;\n    if (this.currentTimeIndex < this.video.time.length) {\n      const nextSegment = this.video.time[this.currentTimeIndex];\n      this.videoElm.currentTime = nextSegment.Start;\n      this.videoElm.play();\n    } else {\n      alert(\"Please enter a valid start time.\");\n    }\n  }\n\n  onTimeUpdate(): void {\n    this.currentMsg = '';\n    this.videoFrame = ''\n    let number = this.videoElm.currentTime;\n    // const currentTime = this.videoElm.currentTime;\n    // const currentSegment = this.video.time.find(segment => currentTime >= segment.secFrom && currentTime <= segment.secTo);\n    // this.currentMsg = currentSegment ? currentSegment.msg : '';\n    for (let i = 0; i < this.video.data.length; i++) {\n      if (number >= this.video.data[i].start && number <= this.video.data[i].end) {\n        this.videoFrame = this.convertSecondsToMMSS(this.video.data[i].start) + \" - \" + this.convertSecondsToMMSS(this.video.data[i].end) + \" Minutes\"\n        this.currentMsg = this.video.data[i].speaker + \" : \" + this.video.data[i].transcript;\n      }\n    }\n  }\n\n  convertSecondsToMMSS(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${this.padToTwoDigits(minutes)}:${this.padToTwoDigits(remainingSeconds)}`;\n  }\n\n  private padToTwoDigits(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n\n  isCurrentTimeInRange(startTime: number, endTime: number): boolean {\n    if (!this.videoElm) return false; // Ensure video element is available\n  \n    const currentTime = this.videoElm.currentTime;\n    return currentTime >= startTime && currentTime <= endTime;\n  }\n\n}\n","<div class=\"body\">\n    <div class=\"container\">\n        <div class=\"video-head\">\n            <!-- <div class=\"video-title\"><b>{{video?.title}}</b></div> -->\n            <div class=\"video-title\"><b>Category :</b> {{Category}}</div>\n        </div>\n\n        <div class=\"video-thumbnail\">\n            <video #myVideo controls (timeupdate)=\"onTimeUpdate()\">\n                <source [src]=\"video?.link\" type=\"video/mp4\">\n            </video>\n        </div>\n        <!-- <button (click)=\"onNextClick()\">Next</button> -->\n        <div class=\"transcription\">\n            <p><b>{{videoFrame}}</b></p>\n            <p>{{currentMsg}}</p>\n        </div>\n    </div>\n    <div class=\"tableContainer\" *ngIf=\"video\">\n        <table>\n            <tr>\n                <th>Id</th>\n                <th>Interval (Min)</th>\n                <th>Person</th>\n                <th>Transcript</th>\n            </tr>\n            <tr *ngFor=\"let item of video.data;let i = index\" (click)=\"timeForwardBackward(item.start)\"\n            [ngClass]=\"{ 'highlight': isCurrentTimeInRange(item.start, item.end) }\">\n                <td>{{i + 1}}</td>\n                <td>{{item.start | timeFormat }} - {{item.end | timeFormat }}</td>\n                <td>{{item.speaker}}</td>\n                <td>{{ item.transcript.length > 25 ? (item.transcript | slice:0:25) + '...' : item.transcript }}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeFormat'\n})\nexport class TimeFormatPipe implements PipeTransform {\n\n  transform(value: number): string {\n    if (value === null || value === undefined) return '';\n    const minutes = Math.floor(value / 60);\n    const seconds = Math.ceil((value % 60));\n    return `${this.padToTwoDigits(minutes)}:${this.padToTwoDigits(seconds)}`;\n  }\n\n  private padToTwoDigits(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n  // transform(value: string): string {\n  //   if (!value) return '';\n    \n  //   // Split the input string to extract minutes and seconds\n  //   const [minutes, secondsWithFraction] = value.split(':');\n  //   const seconds = parseFloat(secondsWithFraction);\n    \n  //   // Round the seconds\n  //   const roundedSeconds = Math.round(seconds);\n    \n  //   // If rounded seconds are 60, increment the minutes\n  //   let roundedMinutes = parseInt(minutes, 10);\n  //   if (roundedSeconds === 60) {\n  //     roundedMinutes += 1;\n  //     return `${this.padToTwoDigits(roundedMinutes)}:00`;\n  //   }\n    \n  //   // Return the formatted time\n  //   return `${this.padToTwoDigits(roundedMinutes)}:${this.padToTwoDigits(roundedSeconds)}`;\n  // }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
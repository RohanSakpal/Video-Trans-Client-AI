{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/gcp-data.service.ts","./src/app/gemini.service.ts","./src/app/new-dashboard/new-dashboard.component.ts","./src/app/new-dashboard/new-dashboard.component.html","./src/app/new-player/new-player.component.ts","./src/app/new-player/new-player.component.html","./src/app/player/player.component.ts","./src/app/player/player.component.html","./src/app/time-format.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PlayerComponent } from './player/player.component';\nimport { NewPlayerComponent } from './new-player/new-player.component';\nimport { NewDashboardComponent } from './new-dashboard/new-dashboard.component';\n\n\nconst routes: Routes = [\n  {path:'',component:NewDashboardComponent},\n  // {path:'videoplayer/:id',component:PlayerComponent},\n  {path:'videoplayer/:id',component:NewPlayerComponent},\n  // {path:'new',component:NewDashboardComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'VideoTrans';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PlayerComponent } from './player/player.component';\nimport {HttpClientModule} from '@angular/common/http'\nimport { GcpDataService } from './gcp-data.service';\nimport { FormsModule } from '@angular/forms';\nimport { TimeFormatPipe } from './time-format.pipe';\nimport { NewPlayerComponent } from './new-player/new-player.component';\nimport { NewDashboardComponent } from './new-dashboard/new-dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    PlayerComponent,\n    TimeFormatPipe,\n    NewPlayerComponent,\n    NewDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [GcpDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router,private gcpDataService: GcpDataService) { }\n  videoArr: any[] = [];\n  keyword:string = '';\n  isDataNotFound:boolean = false;\n  ngOnInit(): void {\n   \n  }\n\n  visitPlayer(id:string) {\n    this.router.navigate([`/videoplayer/${id}`]);\n  }\n\n  keyupFunc() {\n    this.isDataNotFound = false;\n  }\n\n  onSearch() {\n    if(this.keyword != '') {\n      sessionStorage.setItem('keyword',this.keyword);\n      this.gcpDataService.getGcpData(this.keyword).subscribe(data => {\n        this.videoArr = data;\n        if(this.videoArr.length == 0) {\n          this.isDataNotFound = true;\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"body\">\n    <h1>Video Transcription</h1>\n    <div class=\"search-container\">\n        <input type=\"text\" placeholder=\"Enter Keyword\" [(ngModel)]=\"keyword\" (keyup)=\"keyupFunc()\">\n        <button (click)=\"onSearch()\" [disabled]=\"keyword == ''\">Search</button>\n    </div>\n    <div class=\"videos-container\" *ngIf=\"videoArr.length > 0\">\n        <div class=\"video\" *ngFor=\"let video of videoArr\">\n            <video [src]=\"video?.video_link\" (click)=\"visitPlayer(video?.v_id)\"></video>\n            <div>{{video.videoname}}</div>\n        </div>\n    </div>\n    <div *ngIf=\"videoArr.length == 0 && isDataNotFound\">\n        <h1>Data Not Found</h1>\n    </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GcpDataService {\n  keyword :string = '';\n  // private apiUrlGcpData = 'http://localhost:3000/api/gcp-data';\n  // private apiUrlVideoData = 'http://localhost:3000/api/video-data';\n\n  private apiUrlGcpData = 'http://35.244.4.78:3000/api/gcp-data';\n  private apiUrlVideoData = 'http://35.244.4.78:3000/api/video-data';\n\n\n  constructor(private http: HttpClient) { }\n\n  getGcpData(keyword: string): Observable<any> {\n    const params = new HttpParams().set('keyword', keyword);\n    return this.http.get<any>(this.apiUrlGcpData, { params });\n  }\n\n  getVideoData(id: string): Observable<any> {\n    this.keyword = sessionStorage.getItem('keyword');\n    const params = new HttpParams().set('id', id).set('keyword', this.keyword);\n    return this.http.get<any>(this.apiUrlVideoData, { params });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiService {\n  private generativeAI: GoogleGenerativeAI;\n  private messageHistory: BehaviorSubject<any> = new BehaviorSubject(null);\n  generationConfig = {\n    temperature: 1,\n    top_p: 1,\n    top_k: 32,\n    // max_output_tokens: 1024,\n};\n\nsafetySettings = [\n    { category: 'HARM_CATEGORY_HARASSMENT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n    { category: 'HARM_CATEGORY_HATE_SPEECH', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n    { category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },\n    { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' }\n];\n  constructor() { \n    this.generativeAI = new GoogleGenerativeAI('AIzaSyBK9jez2EI6_ABsXNopDzs6OYqEGXNVGdY');\n  }\n\n  async generateText(prompt:string) {\n    const model = this.generativeAI.getGenerativeModel({model:'gemini-pro',generationConfig: this.generationConfig});\n\n    this.messageHistory.next({\n      from: 'user',\n      message: prompt\n    })\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text();\n    console.log('text',text);\n    this.messageHistory.next({\n      from: 'bot',\n      message: text\n    })\n  }\n\n  public getMessageHistory(): Observable<any> {\n    return this.messageHistory.asObservable();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\n\n@Component({\n  selector: 'app-new-dashboard',\n  templateUrl: './new-dashboard.component.html',\n  styleUrls: ['./new-dashboard.component.scss']\n})\nexport class NewDashboardComponent implements OnInit {\n\n  constructor(private router: Router,private gcpDataService: GcpDataService) { }\n  videoArr: any[] = [];\n  keyword:string = '';\n  isDataNotFound:boolean = false;\n  ngOnInit(): void {\n    if(sessionStorage.getItem('keyword') !== null) {\n      this.keyword = sessionStorage.getItem('keyword');\n      this.onSearch();\n    }\n  }\n\n  visitPlayer(id:string) {\n    this.router.navigate([`/videoplayer/${id}`]);\n  }\n\n  keyupFunc() {\n    this.isDataNotFound = false;\n  }\n\n  onSearch() {\n    if(this.keyword != '') {\n      sessionStorage.setItem('keyword',this.keyword);\n      this.gcpDataService.getGcpData(this.keyword).subscribe(data => {\n        this.videoArr = data;\n        if(this.videoArr.length == 0) {\n          this.isDataNotFound = true;\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"body\">\n  <div class=\"main-container\">\n    <header>\n      <h1>Scrapio.AI</h1>\n    </header>\n    <div class=\"container\" *ngIf=\"videoArr.length > 0\">\n      <main>\n        <div class=\"video-grid\">\n          <div class=\"video-card\" *ngFor=\"let video of videoArr\">\n            <div class=\"video-thumbnail\">\n              <video [src]=\"video?.video_link\" (click)=\"visitPlayer(video?.v_id)\"></video>\n              <p>{{video.videoname}}</p>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n    <div *ngIf=\"videoArr.length == 0 && isDataNotFound\" class=\"notFound\">\n      <h1>Data Not Found</h1>\n    </div>\n    <footer>\n      <div class=\"search-bar\">\n        <input type=\"text\" placeholder=\"Search for videos...\" [(ngModel)]=\"keyword\" (keyup)=\"keyupFunc()\">\n        <button (click)=\"onSearch()\" [disabled]=\"keyword == ''\">Search</button>\n      </div>\n    </footer>\n  </div>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\nimport { GeminiService } from '../gemini.service';\n\n@Component({\n  selector: 'app-new-player',\n  templateUrl: './new-player.component.html',\n  styleUrls: ['./new-player.component.scss']\n})\nexport class NewPlayerComponent implements OnInit {\n  currentMsg: string = '';\n  Category: string = '';\n  videoName: string = '';\n  videoFrame: string = '';\n\n  videoId: string;\n  video: any;\n  @ViewChild('myVideo') myVideo: ElementRef<HTMLVideoElement>;\n  startTime: number;\n  videoElm: HTMLVideoElement;\n  currentTimeIndex: number = 0;\n  isFullTranscript: boolean = false;\n  //prompt:string = 'Hi Gemini How Are you?';\n  selectedTranscripts:any[] = [];\n  prompt:string = 'Can you write me content for this transcription or suggest any content ideas';\n  chatHistory:any[] = [];\n  constructor(private route: ActivatedRoute, private gcp: GcpDataService,private geminiServ:GeminiService) {\n    this.geminiServ.getMessageHistory().subscribe((res:any)=> {\n      if(res) {\n        this.prompt = '';\n        this.selectedTranscripts = [];\n        this.video.dataFull?.map(m =>{\n           m['status'] = false})\n        this.chatHistory.push(res);\n        console.log(\"this.video\",this.video)\n      }\n\n      \n    })\n   }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.videoId = params.get('id');\n      this.loadVideo(this.videoId);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.videoElm = this.myVideo.nativeElement;\n    // this.startVideoAtTimeIfNeeded();\n  }\n\n  loadVideo(id: string): void {\n    this.gcp.getVideoData(id).subscribe((res: any) => {\n      // this.video = {\n      //   v_id: res[0].v_id,\n      //   video_link: res[0].video_link,\n      //   data: res\n      // }\n      this.video = {\n        v_id: res.FullTransquery[0].v_id,\n        video_link: res.FullTransquery[0].video_link,\n        data: res.MatchTrascQuery,\n        dataFull : res.FullTransquery?.map(m =>{\n          return { ...m, status : false}}),\n      }\n      console.log('video',this.video)\n      //this.video = this.videoArr.find(v => v.id === +this.videoId);\n      this.Category = this.video.dataFull[0].category;\n      this.videoName= this.video.dataFull[0].videoname;\n      this.startVideoAtTimeIfNeeded();\n    }, (err: any) => {\n      console.log(err);\n    })\n  }\n\n  startVideoAtTimeIfNeeded(): void {\n    if (this.video && this.videoElm) {\n      if(this.video.data.length > 0) {\n        if (!isNaN(this.video.data[this.currentTimeIndex].start) && this.video.data[this.currentTimeIndex].start >= 0) {\n          this.videoElm.src = this.video.video_link; // Set the video source\n          this.videoElm.currentTime = this.video.data[this.currentTimeIndex].start;\n          this.videoElm.play();\n        } else {\n          alert(\"Please enter a valid start time.\");\n        }\n      } else {\n        this.isFullTranscript = true;\n        if (!isNaN(this.video.dataFull[this.currentTimeIndex].start) && this.video.dataFull[this.currentTimeIndex].start >= 0) {\n          this.videoElm.src = this.video.video_link; // Set the video source\n          this.videoElm.currentTime = this.video.dataFull[this.currentTimeIndex].start;\n          this.videoElm.play();\n        } else {\n          alert(\"Please enter a valid start time.\");\n        }\n      }\n    }\n  }\n\n  timeForwardBackward(startime) {\n    this.videoElm.currentTime = startime\n    this.videoElm.play();\n  }\n\n  onNextClick(): void {\n    this.currentTimeIndex++;\n    if (this.currentTimeIndex < this.video.time.length) {\n      const nextSegment = this.video.time[this.currentTimeIndex];\n      this.videoElm.currentTime = nextSegment.Start;\n      this.videoElm.play();\n    } else {\n      alert(\"Please enter a valid start time.\");\n    }\n  }\n\n  onTimeUpdate(): void {\n    this.currentMsg = '';\n    this.videoFrame = ''\n    let number = this.videoElm.currentTime;\n    for (let i = 0; i < this.video.data.length; i++) {\n      if (number >= this.video.data[i].start && number <= this.video.data[i].end) {\n        this.videoFrame = this.convertSecondsToMMSS(this.video.data[i].start) + \" - \" + this.convertSecondsToMMSS(this.video.data[i].end) + \" Minutes\"\n        this.currentMsg = this.video.data[i].speaker + \" : \" + this.video.data[i].transcript;\n      }\n    }\n  }\n\n  convertSecondsToMMSS(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${this.padToTwoDigits(minutes)}:${this.padToTwoDigits(remainingSeconds)}`;\n  }\n\n  private padToTwoDigits(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n\n  isCurrentTimeInRange(startTime: number, endTime: number): boolean {\n    if (!this.videoElm) return false; // Ensure video element is available\n  \n    const currentTime = this.videoElm.currentTime;\n    return currentTime >= startTime && currentTime <= endTime;\n  }\n\n  transcriptChange() {\n    this.isFullTranscript = !this.isFullTranscript;\n  }\n\n  sendData() {\n    console.log(this.selectedTranscripts)\n    let arrayString = this.selectedTranscripts.join(', ');\n    let validPrompt = arrayString + this.prompt;\n    console.log(validPrompt);\n    if(validPrompt) {\n      let msg = this.geminiServ.generateText(this.prompt);\n    }\n  }\n\n  onCheckboxChange(event: any, transcript: string,index:number): void {\n    if (event.target.checked) {\n      this.selectedTranscripts.push(transcript);\n      this.video.dataFull[index].status = true;\n      console.log(this.video.dataFull)\n    } else {\n      const index = this.selectedTranscripts.indexOf(transcript);\n      if (index > -1) {\n        this.selectedTranscripts.splice(index, 1);\n      }\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"subContainer\">\n        <div class=\"videoPlayer\">\n            <header>\n                <button routerLink=\"\">Home</button>\n                <div class=\"titleHeader\">\n                    <p><span>Video Title :</span> {{videoName}}</p>\n                    <p><span>Category :</span> {{Category}}</p>\n                </div>\n            </header>\n           <main>\n            <video #myVideo controls (timeupdate)=\"onTimeUpdate()\">\n                <source [src]=\"video?.link\" type=\"video/mp4\">\n            </video>\n           </main>\n        </div>\n        <div class=\"transcriptContainer\">\n            <div class=\"transcript-tabs\">\n                <button class=\"tab\" [ngClass]=\"{'active': isFullTranscript}\" (click)=\"transcriptChange()\">Full\n                    Transcription</button>\n                <button class=\"tab\" [ngClass]=\"{'active': !isFullTranscript}\" (click)=\"transcriptChange()\">Matched\n                    Transcription</button>\n            </div>\n            <div class=\"transcript-content\" *ngIf=\"isFullTranscript\">\n                <div class=\"transcript-item\" *ngFor=\"let item of video?.dataFull;let i = index\"\n                    [ngClass]=\"{ 'highlight': isCurrentTimeInRange(item.start, item.end) }\">\n                    <input type=\"checkbox\" (change)=\"onCheckboxChange($event, item.transcript,i)\" [checked]=\"item.status\">\n                    <span (click)=\"timeForwardBackward(item.start)\">{{item.start | timeFormat }} - {{item.end | timeFormat }}. {{item.transcript}}</span>\n                </div>\n            </div>\n            <div class=\"transcript-content\" *ngIf=\"!isFullTranscript\">\n                <div class=\"transcript-item\" *ngFor=\"let item of video?.data;let i = index\"\n                    [ngClass]=\"{ 'highlight': isCurrentTimeInRange(item.start, item.end) }\">\n                    <span (click)=\"timeForwardBackward(item.start)\"><b>{{item.start | timeFormat }} - {{item.end | timeFormat }}.</b> {{item.transcript}}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"geminiContainer\">\n        <div class=\"chat-container\">\n            <div class=\"message user-message\" *ngFor=\"let item of chatHistory\">\n                <div class=\"avatar\" [ngClass]=\"{'team-avatar': item.from === 'bot', 'user-avatar': item.from !== 'bot'}\"></div>\n                <pre class=\"text\">{{item.message}}</pre>\n            </div>\n        </div>\n        <div class=\"chat-input\">\n            <input type=\"text\" placeholder=\"Write Something...\" [(ngModel)]=\"prompt\" />\n            <div class=\"chat-icons\">\n                <button class=\"icon-button\" (click)=\"sendData()\" [disabled]=\"prompt == ''\">➤</button>\n            </div>\n        </div>\n    \n    </div>\n</div>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GcpDataService } from '../gcp-data.service';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit {\n  currentMsg: string = '';\n  Category: string = '';\n  videoFrame: string = '';\n\n  videoId: string;\n  video: any;\n  @ViewChild('myVideo') myVideo: ElementRef<HTMLVideoElement>;\n  startTime: number;\n  videoElm: HTMLVideoElement;\n  currentTimeIndex: number = 0;\n  constructor(private route: ActivatedRoute, private gcp: GcpDataService) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params => {\n      this.videoId = params.get('id');\n      this.loadVideo(this.videoId);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.videoElm = this.myVideo.nativeElement;\n    // this.startVideoAtTimeIfNeeded();\n  }\n\n  loadVideo(id: string): void {\n    this.gcp.getVideoData(id).subscribe((res: any) => {\n      this.video = {\n        v_id: res[0].v_id,\n        video_link: res[0].video_link,\n        data: res\n      }\n      console.log(this.video)\n      //this.video = this.videoArr.find(v => v.id === +this.videoId);\n      this.Category = this.video.data[0].category;\n      this.startVideoAtTimeIfNeeded();\n    }, (err: any) => {\n      console.log(err);\n    })\n  }\n\n  startVideoAtTimeIfNeeded(): void {\n    if (this.video && this.videoElm) {\n      if (!isNaN(this.video.data[this.currentTimeIndex].start) && this.video.data[this.currentTimeIndex].start >= 0) {\n        this.videoElm.src = this.video.video_link; // Set the video source\n        this.videoElm.currentTime = this.video.data[this.currentTimeIndex].start;\n        this.videoElm.play();\n      } else {\n        alert(\"Please enter a valid start time.\");\n      }\n    }\n  }\n\n  timeForwardBackward(startime) {\n    this.videoElm.currentTime = startime\n    this.videoElm.play();\n  }\n\n  onNextClick(): void {\n    this.currentTimeIndex++;\n    if (this.currentTimeIndex < this.video.time.length) {\n      const nextSegment = this.video.time[this.currentTimeIndex];\n      this.videoElm.currentTime = nextSegment.Start;\n      this.videoElm.play();\n    } else {\n      alert(\"Please enter a valid start time.\");\n    }\n  }\n\n  onTimeUpdate(): void {\n    this.currentMsg = '';\n    this.videoFrame = ''\n    let number = this.videoElm.currentTime;\n    // const currentTime = this.videoElm.currentTime;\n    // const currentSegment = this.video.time.find(segment => currentTime >= segment.secFrom && currentTime <= segment.secTo);\n    // this.currentMsg = currentSegment ? currentSegment.msg : '';\n    for (let i = 0; i < this.video.data.length; i++) {\n      if (number >= this.video.data[i].start && number <= this.video.data[i].end) {\n        this.videoFrame = this.convertSecondsToMMSS(this.video.data[i].start) + \" - \" + this.convertSecondsToMMSS(this.video.data[i].end) + \" Minutes\"\n        this.currentMsg = this.video.data[i].speaker + \" : \" + this.video.data[i].transcript;\n      }\n    }\n  }\n\n  convertSecondsToMMSS(seconds: number): string {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.ceil(seconds % 60);\n    return `${this.padToTwoDigits(minutes)}:${this.padToTwoDigits(remainingSeconds)}`;\n  }\n\n  private padToTwoDigits(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n\n  isCurrentTimeInRange(startTime: number, endTime: number): boolean {\n    if (!this.videoElm) return false; // Ensure video element is available\n  \n    const currentTime = this.videoElm.currentTime;\n    return currentTime >= startTime && currentTime <= endTime;\n  }\n\n}\n","<div class=\"body\">\n    <div class=\"container\">\n        <div class=\"video-head\">\n            <!-- <div class=\"video-title\"><b>{{video?.title}}</b></div> -->\n            <div class=\"video-title\"><b>Category :</b> {{Category}}</div>\n        </div>\n\n        <div class=\"video-thumbnail\">\n            <video #myVideo controls (timeupdate)=\"onTimeUpdate()\">\n                <source [src]=\"video?.link\" type=\"video/mp4\">\n            </video>\n        </div>\n        <!-- <button (click)=\"onNextClick()\">Next</button> -->\n        <div class=\"transcription\">\n            <p><b>{{videoFrame}}</b></p>\n            <p>{{currentMsg}}</p>\n        </div>\n    </div>\n    <div class=\"tableContainer\" *ngIf=\"video\">\n        <table>\n            <tr>\n                <th>Id</th>\n                <th>Interval (Min)</th>\n                <th>Person</th>\n                <th>Transcript</th>\n            </tr>\n            <tr *ngFor=\"let item of video.data;let i = index\" (click)=\"timeForwardBackward(item.start)\"\n            [ngClass]=\"{ 'highlight': isCurrentTimeInRange(item.start, item.end) }\">\n                <td>{{i + 1}}</td>\n                <td>{{item.start | timeFormat }} - {{item.end | timeFormat }}</td>\n                <td>{{item.speaker}}</td>\n                <td>{{ item.transcript.length > 25 ? (item.transcript | slice:0:25) + '...' : item.transcript }}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'timeFormat'\n})\nexport class TimeFormatPipe implements PipeTransform {\n\n  transform(value: number): string {\n    if (value === null || value === undefined) return '';\n    const minutes = Math.floor(value / 60);\n    const seconds = Math.ceil((value % 60));\n    return `${this.padToTwoDigits(minutes)}:${this.padToTwoDigits(seconds)}`;\n  }\n\n  private padToTwoDigits(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n  // transform(value: string): string {\n  //   if (!value) return '';\n    \n  //   // Split the input string to extract minutes and seconds\n  //   const [minutes, secondsWithFraction] = value.split(':');\n  //   const seconds = parseFloat(secondsWithFraction);\n    \n  //   // Round the seconds\n  //   const roundedSeconds = Math.round(seconds);\n    \n  //   // If rounded seconds are 60, increment the minutes\n  //   let roundedMinutes = parseInt(minutes, 10);\n  //   if (roundedSeconds === 60) {\n  //     roundedMinutes += 1;\n  //     return `${this.padToTwoDigits(roundedMinutes)}:00`;\n  //   }\n    \n  //   // Return the formatted time\n  //   return `${this.padToTwoDigits(roundedMinutes)}:${this.padToTwoDigits(roundedSeconds)}`;\n  // }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}